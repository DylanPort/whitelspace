╔═══════════════════════════════════════════════════════════════════╗
║     GHOST WHISTLE - HYBRID DEPLOYMENT COMMANDS                    ║
║     Local Bootstrap Nodes + Render Cloud Services                 ║
╚═══════════════════════════════════════════════════════════════════╝

💡 ARCHITECTURE:
  🏠 LOCAL: 10 Bootstrap Nodes (handle SOL) - FREE
  ☁️  RENDER: Signaling + Backend + Frontend - $14/month


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🚀 QUICK START (4 Steps)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

STEP 1: Generate Keypairs & Start Local Nodes (2 minutes)
  
  # PowerShell (Windows):
  cd node-keys
  for ($i=1; $i -le 10; $i++) {
    solana-keygen new --outfile "bootstrap-node-$i-keypair.json" --no-bip39-passphrase --force
  }
  cd ..
  
  # OR Git Bash:
  bash generate-keypairs.sh
  
  # Start all 10 bootstrap nodes locally:
  pm2 start ecosystem.config.js
  
  # Check they're running:
  pm2 status


STEP 2: Deploy to Render (5 minutes)
  
  1. Push code to GitHub (node-keys/ is gitignored ✅)
     git add .
     git commit -m "Ready for hybrid deployment"
     git push
  
  2. Go to: https://render.com/
  
  3. New → Blueprint → Connect your repo
  
  4. Render will detect render.yaml and create:
     - ghost-whistle-signaling ($7/month)
     - ghost-whistle-backend ($7/month)
  
  5. Get your Render URLs:
     - Signaling: https://ghost-whistle-signaling.onrender.com
     - Backend: https://ghost-whistle-backend.onrender.com


STEP 3: Update Local Nodes to Use Render Signaling (1 minute)
  
  # Edit ecosystem.config.js
  # Find all nodes and change:
  SIGNALING_SERVER: 'wss://ghost-whistle-signaling.onrender.com'
  
  # Restart local nodes:
  pm2 restart all
  
  # Verify connection:
  pm2 logs --lines 50


STEP 4: Deploy Frontend to Netlify (3 minutes)
  
  1. Go to: https://netlify.com/
  
  2. New Site from Git → Select your repo
  
  3. Build settings:
     - Build command: (leave empty)
     - Publish directory: .
  
  4. Add environment variables:
     SIGNALING_SERVER=wss://ghost-whistle-signaling.onrender.com
     BACKEND_API=https://ghost-whistle-backend.onrender.com
  
  5. Deploy!


DONE! Your hybrid network is live! 🎉


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📋 DAILY MANAGEMENT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Start Your Day:
  
  # Check if local nodes are running
  pm2 status
  
  # If not, start them:
  pm2 start ecosystem.config.js
  
  # View logs:
  pm2 logs --lines 50


Check Node Balances (Weekly):
  
  # PowerShell:
  for ($i=1; $i -le 10; $i++) {
    $addr = solana-keygen pubkey "node-keys/bootstrap-node-$i-keypair.json"
    $bal = solana balance $addr
    Write-Host "Node $i: $bal"
  }
  
  # Refill if needed:
  solana transfer NODE_ADDRESS 0.02 --allow-unfunded-recipient


Stop Nodes (When Done):
  
  pm2 stop all


Check Render Services:
  
  # Signaling server health:
  curl https://ghost-whistle-signaling.onrender.com/health
  
  # Backend API health:
  curl https://ghost-whistle-backend.onrender.com/health


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔒 SECURITY FEATURES (Implemented)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ Bootstrap Node Validation:
   - Only nodes with ID containing "bootstrap-node" can handle SOL
   - User nodes CANNOT process relay transactions
   - Security check in handleRelayRequest()
   - Security check in handleRelayForward()

✅ Wallet Protection:
   - Keypairs stay on YOUR local computer
   - Never committed to Git (.gitignore)
   - Never uploaded to Render
   - Only bootstrap nodes have keypairs

✅ Separation of Concerns:
   - Bootstrap nodes (local) = Handle SOL
   - User nodes (cloud) = Participate only
   - Signaling server (cloud) = Route messages
   - Backend API (cloud) = Public endpoints


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
💰 COST COMPARISON
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

                    Hybrid      VPS (5 Servers)   All Local
─────────────────────────────────────────────────────────────
Bootstrap Nodes     LOCAL       $30/month         LOCAL
Signaling Server    $7/month    On VPS (free)     LOCAL
Backend API         $7/month    On VPS (free)     LOCAL
Frontend            FREE        FREE              LOCAL
─────────────────────────────────────────────────────────────
TOTAL:              $14/mo      $30/mo            $0/mo

Privacy Level:      ⭐⭐⭐      ⭐⭐⭐⭐⭐         ⭐
24/7 Uptime:        ✅          ✅                ❌
Geo Distribution:   ❌          ✅                ❌
Easy Setup:         ✅          ❌                ✅
Security:           ⭐⭐⭐⭐⭐   ⭐⭐⭐             ⭐⭐⭐⭐⭐


RECOMMENDATION: Hybrid for development, VPS for production privacy


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🧪 TESTING YOUR SETUP
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Check Local Nodes:
   pm2 status
   # All 10 bootstrap nodes should show "online"

2. Check Render Services:
   curl https://ghost-whistle-signaling.onrender.com/health
   curl https://ghost-whistle-backend.onrender.com/health
   # Both should return: {"status":"ok"}

3. Check Node Connection:
   pm2 logs --lines 50 | grep "Connected to signaling"
   # Should see 10 nodes connected

4. Test Relay:
   - Open your Netlify frontend
   - Connect wallet
   - Send 0.01 SOL anonymously (3 hops)
   - Watch local logs: pm2 logs --lines 50
   - Should see relay hopping through your local nodes!

5. Verify Only Bootstrap Nodes Handle SOL:
   pm2 logs --lines 100 | grep "BOOTSTRAP"
   # Should see: "Node Type: 💰 BOOTSTRAP (Can handle SOL)"


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔧 TROUBLESHOOTING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

PROBLEM: "Local nodes not connecting to Render signaling"
  
  ✓ Check SIGNALING_SERVER in ecosystem.config.js:
    Should be: wss://your-signaling.onrender.com
    NOT: ws://localhost:8080
  
  ✓ Restart nodes:
    pm2 restart all
  
  ✓ Check logs:
    pm2 logs signaling-server


PROBLEM: "Render services sleeping (free tier)"
  
  ✓ Upgrade to Starter plan ($7/month per service)
  ✓ Or use a keep-alive service (cron-job.org)
  ✓ Or accept 30s cold start delay


PROBLEM: "Frontend can't connect to backend"
  
  ✓ Check environment variables in Netlify dashboard
  ✓ Make sure URLs use HTTPS (not HTTP)
  ✓ Check CORS settings in server.js


PROBLEM: "Relay not working"
  
  ✓ Check local nodes are running: pm2 status
  ✓ Check nodes have SOL: solana balance NODE_ADDRESS
  ✓ Check logs: pm2 logs --lines 100
  ✓ Verify only bootstrap nodes selected (not user nodes)


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📚 FILES CREATED FOR HYBRID DEPLOYMENT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✓ HYBRID-DEPLOYMENT.md         Complete hybrid deployment guide
✓ HYBRID-DEPLOY-COMMANDS.txt   This file (quick reference)
✓ render.yaml                   Render configuration
✓ user-node-client.js           User node (no SOL handling)
✓ node-client.js                Updated with security checks

Security Updates in node-client.js:
  ✓ IS_BOOTSTRAP_NODE check at startup
  ✓ handleRelayRequest() blocks non-bootstrap nodes
  ✓ handleRelayForward() blocks non-bootstrap nodes
  ✓ Clear logging of node type


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎯 WHAT YOU GET
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ 10 Bootstrap Nodes (LOCAL)
   - Handle all SOL relay transactions
   - Wallets secure on your computer
   - Control when they run

✅ Professional Cloud Services (RENDER)
   - Public signaling server
   - Public backend API
   - 99.9% uptime
   - SSL/HTTPS included

✅ Static Frontend (NETLIFY)
   - Fast CDN delivery
   - Free tier
   - Auto-deploy from Git

✅ Security & Privacy
   - Wallets never leave your computer
   - Only bootstrap nodes handle SOL
   - User nodes can participate safely

✅ Cost Effective
   - $14/month for cloud services
   - No VPS management
   - Easy scaling


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Ready to deploy? Start with:
  pm2 start ecosystem.config.js
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

